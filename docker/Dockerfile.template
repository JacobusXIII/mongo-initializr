# syntax = docker/dockerfile:1
# Use the official MongoDB image as the base image
FROM mongo:%%MONGO_VERSION%%

ENV MI_DATABASE_NAME=${MI_DATABASE_NAME:-mongo} \
    MI_DATABASE_USERNAME=${MI_DATABASE_NAME:-aerius} \
    MI_DATABASE_PASSWORD=${MI_DATABASE_NAME:-aerius} \
    MI_DATABASE_VERSION=${MI_DATABASE_VERSION} \
    MI_INPUT_FILE=${MI_INPUT_FILE} \
    MI_RUN_SCRIPT_FOLDER=${MI_RUN_SCRIPT_FOLDER} \
    MI_NEXUS_BASE_URL=${MI_NEXUS_BASE_URL} \
    MI_NEXUS_REPOSITORY=${MI_NEXUS_REPOSITORY} \
    MI_BIN_FOLDER=${MI_BIN_FOLDER:-/mongo-initializr} \
    MI_SOURCE_FOLDER=${MI_SOURCE_FOLDER:-/source} \
    MI_DBDATA_FOLDER=${MI_DBDATA_FOLDER:-/dbdata} \
    MI_SKIP_DBDATA_SYNC=${MI_SKIP_DBDATA_SYNC:-false} \
    MI_BIN_FOLDER_CLEANUP=${MI_BIN_FOLDER_CLEANUP:-false} \
    MI_SOURCE_FOLDER_CLEANUP=${MI_SOURCE_FOLDER_CLEANUP:-false} \
    MI_DBDATA_FOLDER_CLEANUP=${MI_DBDATA_FOLDER_CLEANUP:-false} \
    MI_SKIP_UNSET_ENVS=${MI_SKIP_UNSET_ENVS:-false}

# Install required packages
RUN --mount=type=cache,id=aerius-apt-cache-debian,mode=0755,sharing=locked,target=/var/cache/apt \
    apt-get update \
    && apt-get install -y wget curl jq

# Copy all necessary scripts
COPY docker/mongo-initializr.sh /
COPY docker/docker-entrypoint.sh /
COPY bin/ "${MI_BIN_FOLDER}"

ENTRYPOINT ["/docker-entrypoint.sh"]
